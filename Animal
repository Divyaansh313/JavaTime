//A menu driven program to show inheritance and functions related to zoo

import java.util.*;

abstract class Animal
{
	String type;
	public Animal() {}
	abstract String getName();
	abstract int getAge();
	abstract void talk();
}

class Tiger extends Animal
{
      String name;
      int age;
	public Tiger(String name, int age)
	{
		this.name = name;
		this.age = age;
		this.type = "Carnivore";
	}
	void talk()
	{
		System.out.println("The name of the animal is " + name);
		System.out.println("The age of the animal is " + age);
		System.out.println("The type of the animal is " + type);
	}
	String getName()
	{
		return name;
	}
	int getAge()
	{
		return age;
	}
}

class Elephant extends Animal
{
    String name;
     int age;
	public Elephant(String name, int age)
	{
		this.name = name;
		this.age = age;
		this.type = "Herbivore";
	}
	void talk()
	{
		System.out.println("The name of the animal is " + name);
		System.out.println("The age of the animal is " + age);
		System.out.println("The type of the animal is " + type);
	}
	String getName()
	{
		return name;
	}
	int getAge()
	{
		return age;
	}
}

class Bull extends Animal
{
      String name;
      int age;
	public Bull(String name, int age)
	{
		this.name = name;
		this.age = age;
		this.type = "Herbivore";
	}
	void talk()
	{
		System.out.println("The name of the animal is " + name);
		System.out.println("The age of the animal is " + age);
		System.out.println("The type of the animal is " + type);
	}
	String getName()
	{
		return name;
	}
	int getAge()
	{
		return age;
	}
}

class Zoo {

	int count = 0;
	Animal animals[] = new Animal[999];

	public void addAnimal(Animal a)
	{
	animals[count]=a;
	count++;
	}

		public void displayAnimal()
	{
        Animal a;

	for(int i=0; i<count; i++)
		{
		a=animals[i];
		System.out.println("Name is "+a.getName());
		System.out.println("Type is "+a.type);
		}
	}


	public void displayAnimal(String type)
	{

       	Animal a;
	for(int i=0; i<count; i++)
		{
		a=animals[i];
		if(!(a.type).equalsIgnoreCase(type))
		continue;

		System.out.println("Name is "+a.getName());
		System.out.println("Type is "+a.type);
		}
	}

		public void feedingTime()
	{
	for(int i=0;i<count;++i)
	    {
		animals[i].talk();
	    }
	}
}

public class Manage{
	public static void main(String args[])
	{

	Zoo zoo1 = new Zoo();
	do{

	System.out.println("Choose one of the options.");
	System.out.println("1. Add a new animal to the zoo: a)Tiger	b)Elephant	c)Bull");
	System.out.println("2. Display all animals currently in the zoo.");
	System.out.println("3. Display the name and age of the animal in a selected type.");
	System.out.println("4. Trigger feeding Time.");
	Scanner myscan = new Scanner(System.in);
	int number = myscan.nextInt();

		switch(number) {
	case 1:{
		myscan.nextLine();
		System.out.println("enter type: ");
                 String myAnimal = myscan.nextLine();
		System.out.println("enter name: ");
		String animalName = myscan.nextLine();
		System.out.println("enter age: ");
		int animalAge = myscan.nextInt();

		if(myAnimal.equals("Tiger"))
		{
			Animal t1=new Tiger(animalName,animalAge);
			zoo1.addAnimal(t1);
		}
		else if(myAnimal.equals("Elephant"))
		{
			Animal e1=new Elephant(animalName,animalAge);
			zoo1.addAnimal(e1);
		}
		else if(myAnimal.equals("Bull"))
		{
			Animal b1=new Bull(animalName,animalAge);
			zoo1.addAnimal(b1);
		}}
		break;

		case 2:
		zoo1.displayAnimal();
		break;

			case 3:{
		Scanner scan1 = new Scanner(System.in);
		String AnimalType = scan1.nextLine();
    		zoo1.displayAnimal(AnimalType);
		}
		break;

			case 4:
		zoo1.feedingTime();
		break;
		}
		}
		while(true);
	}
}
